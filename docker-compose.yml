version: "3.9"
services:
  redis:
    image: "redis:6"
    ports:
      - "6379:6379"
  postgres:
    build:
      context: "docker/postgres"
      dockerfile: "DOCKERFILE"
      args:
        - PGHOST=${PGHOST}
        - PGPORT=${PGPORT}
        - PGUSER=${PGUSER}
        - PGPASSWORD=${PGPASSWORD}
        - PGDATABASE=${PGDATABASE}
        - PGTESTUSER=${PGTESTUSER}
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    volumes:
      - "${PWD}/docker/postgres/postgres.conf:/etc/postgresql/postgresql.conf"
    command: ["-c", "config-file=/etc/postgresql/postgresql.conf"]
  ngrok:
      image: "ngrok/ngrok:latest"
      restart: unless-stopped
      command:
        - "start"
        - "--all"
        - "--config"
        - "/etc/ngrok.yaml"
      environment:
        - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
      volumes:
        - ${PWD}/ngrok.yaml:/etc/ngrok.yaml
     # volumes:
     #   - "${PWD}/ngrok.yaml:/etc/ngrok.yaml"
     #   - "${PWD}/secrets/local:/etc/secrets"
     #   - "${SOPS_AGE_KEY_FILE}:/.config/sops/age/keys.txt"
     # environment:
     #   - SOPS_AGE_KEY_FILE=/.config/sops/age/keys.txt
      ports:
        - "4040:4040"
#  streamer:
#    build:
#      context: "."
#      dockerfile: "docker/streamer/Dockerfile"
#    ports:
#      - "6000:6000"
#    volumes:
#      - ${PWD}/local:/app/local
#      - ${PWD}/deploy:/app/deploy
#    depends_on:
#      - postgres
#      - ngrok
#      - redis
  task-emulator:
    image: ghcr.io/aertje/cloud-tasks-emulator:latest
    ports:
      - "8123:8123"
    expose:
      - "8123"
    command: [
      "-host", "0.0.0.0",
      "-port", "8123",
      "-queue", "projects/splitfi-local/locations/here/queues/token-processing",
      "-queue", "projects/splitfi-local/locations/here/queues/indexer-refreshes",
      "-queue", "projects/splitfi-local/locations/here/queues/wallet-validate",
    ]
  pubsub-emulator:
    image: gcr.io/google.com/cloudsdktool/google-cloud-cli:emulators
    expose:
      - "8085"
    ports:
      - "8085:8085"
    command: [
      "/bin/bash",
      "-c",
      "gcloud beta emulators pubsub start --host-port=0.0.0.0:8085 --project=splitfi-local"
    ]

  # Uncomment if you want to run tokenprocessing locally as a container
  # tokenprocessing:
  #   build:
  #     context: "."
  #     dockerfile: "docker/tokenprocessing/Dockerfile"
  #   ports:
  #     - "6500:6500"
  #   volumes:
  #     - ${PWD}/_local:/app/_local
  #     - ${PWD}/_deploy:/app/_deploy
  #   depends_on:
  #     - postgres
  #     - redis