// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

var typeConversionMap = map[string]func(object interface{}) (objectAsType interface{}, ok bool){
	"AddRolesToUserPayloadOrError": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(AddRolesToUserPayloadOrError)
		return obj, ok
	},

	"AddUserWalletPayloadOrError": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(AddUserWalletPayloadOrError)
		return obj, ok
	},

	"AdminAddWalletPayloadOrError": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(AdminAddWalletPayloadOrError)
		return obj, ok
	},

	"AuthorizationError": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(AuthorizationError)
		return obj, ok
	},

	"CreateSplitPayloadOrError": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(CreateSplitPayloadOrError)
		return obj, ok
	},

	"CreateUserPayloadOrError": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(CreateUserPayloadOrError)
		return obj, ok
	},

	"DeleteSplitPayloadOrError": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(DeleteSplitPayloadOrError)
		return obj, ok
	},

	"Error": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(Error)
		return obj, ok
	},

	"GetAuthNoncePayloadOrError": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(GetAuthNoncePayloadOrError)
		return obj, ok
	},

	"LoginPayloadOrError": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(LoginPayloadOrError)
		return obj, ok
	},

	"Media": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(Media)
		return obj, ok
	},

	"MediaSubtype": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(MediaSubtype)
		return obj, ok
	},

	"Node": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(Node)
		return obj, ok
	},

	"Notification": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(Notification)
		return obj, ok
	},

	"OptInForRolesPayloadOrError": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(OptInForRolesPayloadOrError)
		return obj, ok
	},

	"OptOutForRolesPayloadOrError": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(OptOutForRolesPayloadOrError)
		return obj, ok
	},

	"PreverifyEmailPayloadOrError": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(PreverifyEmailPayloadOrError)
		return obj, ok
	},

	"PublishSplitPayloadOrError": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(PublishSplitPayloadOrError)
		return obj, ok
	},

	"RegisterUserPushTokenPayloadOrError": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(RegisterUserPushTokenPayloadOrError)
		return obj, ok
	},

	"RemoveUserWalletsPayloadOrError": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(RemoveUserWalletsPayloadOrError)
		return obj, ok
	},

	"ResendVerificationEmailPayloadOrError": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(ResendVerificationEmailPayloadOrError)
		return obj, ok
	},

	"RevokeRolesFromUserPayloadOrError": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(RevokeRolesFromUserPayloadOrError)
		return obj, ok
	},

	"SearchSplitsPayloadOrError": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(SearchSplitsPayloadOrError)
		return obj, ok
	},

	"SearchUsersPayloadOrError": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(SearchUsersPayloadOrError)
		return obj, ok
	},

	"SplitByIdPayloadOrError": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(SplitByIDPayloadOrError)
		return obj, ok
	},

	"SplitFiUserOrAddress": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(SplitFiUserOrAddress)
		return obj, ok
	},

	"SplitFiUserOrWallet": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(SplitFiUserOrWallet)
		return obj, ok
	},

	"UnregisterUserPushTokenPayloadOrError": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(UnregisterUserPushTokenPayloadOrError)
		return obj, ok
	},

	"UnsubscribeFromEmailTypePayloadOrError": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(UnsubscribeFromEmailTypePayloadOrError)
		return obj, ok
	},

	"UpdateEmailNotificationSettingsPayloadOrError": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(UpdateEmailNotificationSettingsPayloadOrError)
		return obj, ok
	},

	"UpdateEmailPayloadOrError": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(UpdateEmailPayloadOrError)
		return obj, ok
	},

	"UpdatePrimaryWalletPayloadOrError": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(UpdatePrimaryWalletPayloadOrError)
		return obj, ok
	},

	"UpdateSplitHiddenPayloadOrError": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(UpdateSplitHiddenPayloadOrError)
		return obj, ok
	},

	"UpdateSplitInfoPayloadOrError": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(UpdateSplitInfoPayloadOrError)
		return obj, ok
	},

	"UpdateSplitOrderPayloadOrError": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(UpdateSplitOrderPayloadOrError)
		return obj, ok
	},

	"UpdateSplitPayloadOrError": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(UpdateSplitPayloadOrError)
		return obj, ok
	},

	"UpdateUserExperiencePayloadOrError": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(UpdateUserExperiencePayloadOrError)
		return obj, ok
	},

	"UpdateUserInfoPayloadOrError": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(UpdateUserInfoPayloadOrError)
		return obj, ok
	},

	"UploadPersistedQueriesPayloadOrError": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(UploadPersistedQueriesPayloadOrError)
		return obj, ok
	},

	"UserByAddressOrError": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(UserByAddressOrError)
		return obj, ok
	},

	"UserByIdOrError": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(UserByIDOrError)
		return obj, ok
	},

	"UserByUsernameOrError": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(UserByUsernameOrError)
		return obj, ok
	},

	"VerifyEmailMagicLinkPayloadOrError": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(VerifyEmailMagicLinkPayloadOrError)
		return obj, ok
	},

	"VerifyEmailPayloadOrError": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(VerifyEmailPayloadOrError)
		return obj, ok
	},

	"ViewSplitPayloadOrError": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(ViewSplitPayloadOrError)
		return obj, ok
	},

	"ViewerOrError": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(ViewerOrError)
		return obj, ok
	},

	"ViewerSplitByIdPayloadOrError": func(object interface{}) (interface{}, bool) {
		obj, ok := object.(ViewerSplitByIDPayloadOrError)
		return obj, ok
	},
}

func ConvertToModelType(object interface{}, gqlTypeName string) (objectAsType interface{}, ok bool) {
	if conversionFunc, ok := typeConversionMap[gqlTypeName]; ok {
		if convertedObj, ok := conversionFunc(object); ok {
			return convertedObj, true
		}
	}

	return nil, false
}
